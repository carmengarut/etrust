{"version":3,"sources":["components/NoteDetail.js","services/notes.js","services/login.js","i18n/index.js","components/Toggable.js","components/LoginForm.js","Login.js","components/Notification.js","components/Note.js","components/NoteForm.js","hooks/useNotes.js","hooks/useUser.js","Notes.js","App.js","index.js"],"names":["NoteDetail","notes","id","useParams","note","find","console","log","content","user","name","important","baseUrl","token","setToken","newToken","login","credentials","a","axios","post","data","es","CANCEL_BUTTON","Toggable","forwardRef","ref","children","buttonLabel","useState","visible","setVisible","hideWhenVisible","display","showWhenVisible","toggleVisibility","useImperativeHandle","style","onClick","displayName","useField","type","value","setValue","onChange","event","target","LoginForm","props","username","password","onSubmit","handleLogin","placeholder","Login","history","useHistory","errorMessage","setErrorMessage","setUsername","setPassword","setUser","preventDefault","userToSet","window","localStorage","setItem","JSON","stringify","push","message","setTimeout","handleUsernameChange","handlePasswordChange","Notification","className","Note","toggleImportance","label","to","NoteForm","addNote","handleLogout","newNote","setNewNote","toggableRef","useRef","current","useNotes","setNotes","useEffect","get","then","response","initialNotes","noteObject","newObject","config","headers","Authorization","create","returnedNote","prev","catch","e","error","toggleImportanceOf","n","changedNote","put","update","map","useUser","loggedUserJSON","getItem","parse","userLogin","userLogout","removeItem","Notes","showAll","setShowAll","notesToShow","filter","i","Home","Users","inlineStyles","padding","App","path","render","ReactDOM","document","getElementById"],"mappings":"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","file":"static/js/main.d31b7e97.chunk.js","sourcesContent":["import React from 'react'\nimport { useParams } from 'react-router-dom'\n\nexport const NoteDetail = ({ notes }) => {\n  const { id } = useParams()\n  const note = notes.find(note => note.id === id)\n  if (!note) return null\n\n  console.log(note)\n\n  return (\n    <div>\n      <h2>{note.content}</h2>\n      <div>{note.user.name}</div>\n      <div>\n        <strong>\n          {note.important ? 'important' : ''}\n        </strong>\n      </div>\n    </div>\n  )\n}\n","import axios from 'axios'\nconst baseUrl = '/api/notes'\n\nlet token = null\n\nexport const setToken = newToken => {\n  token = `Bearer ${newToken}`\n}\nexport const getAll = () => {\n  const request = axios.get(baseUrl)\n  return request.then(response => response.data)\n}\n\nexport const create = (newObject) => {\n  const config = {\n    headers: {\n      Authorization: token\n    }\n  }\n  const request = axios.post(baseUrl, newObject, config)\n  return request.then(response => response.data)\n}\n\nexport const update = (id, newObject) => {\n  const config = {\n    headers: {\n      Authorization: token\n    }\n  }\n  const request = axios.put(`${baseUrl}/${id}`, newObject, config)\n  return request.then(response => response.data)\n}\n","import axios from 'axios'\nconst baseUrl = '/api/login/'\n\nexport const login = async credentials => {\n  const { data } = await axios.post(baseUrl, credentials)\n  return data\n}\n","export const es = {\n  TOGGABLE: {\n    CANCEL_BUTTON: 'Cancel'\n  }\n}\n","import React, { forwardRef, useImperativeHandle, useState } from 'react'\nimport propTypes from 'prop-types'\nimport { es } from '../i18n/index'\n\nconst Toggable = forwardRef(({ children, buttonLabel = 'show' }, ref) => {\n  const [visible, setVisible] = useState(false)\n\n  const hideWhenVisible = { display: visible ? 'none' : '' }\n  const showWhenVisible = { display: visible ? '' : 'none' }\n\n  const toggleVisibility = () => setVisible(!visible)\n\n  useImperativeHandle(ref, () => {\n    return {\n      toggleVisibility\n    }\n  })\n\n  return (\n    <div>\n      <div style={hideWhenVisible}>\n        <button onClick={toggleVisibility}>{buttonLabel}</button>\n      </div>\n      <div style={showWhenVisible}>\n        {children}\n        <button onClick={toggleVisibility}>{es.TOGGABLE.CANCEL_BUTTON}</button>\n      </div>\n    </div>\n  )\n})\n\nToggable.displayName = 'Toggable' // Esto es para que en el warning si faltan proptypes aparezca bien el nombre del componente y no el forwardRef\n\nToggable.propTypes = {\n  buttonLabel: propTypes.string\n}\n\nexport default Toggable\n","import React, { useState } from 'react'\nimport Toggable from './Toggable'\nimport propTypes from 'prop-types'\n\nconst useField = ({ type }) => {\n  const [value, setValue] = useState('')\n\n  const onChange = event => {\n    setValue(event.target.value)\n  }\n\n  return {\n    type,\n    value,\n    onChange\n  }\n}\n\nexport default function LoginForm (props) {\n  const username = useField({ type: 'text' })\n  const password = useField({ type: 'password' })\n  return (\n    <Toggable buttonLabel='Show login'>\n      <form onSubmit={props.handleLogin}>\n        <div>\n          <input\n            {... username}\n            name='Username'\n            placeholder='Username'\n          />\n        </div>\n        <div>\n          <input\n            {... password}\n            name='Password'\n            placeholder='Password'\n          />\n        </div>\n        <button id='form-login-button'>\n          Login\n        </button>\n      </form>\n    </Toggable>\n  )\n}\n\nLoginForm.propTypes = {\n  handleSubmit: propTypes.func.isRequired,\n  username: propTypes.string\n}\n","import { useState } from 'react'\nimport { setToken } from './services/notes'\nimport { login } from './services/login'\nimport LoginForm from './components/LoginForm'\nimport { useHistory } from 'react-router-dom'\n\nexport default function Login () {\n  const history = useHistory()\n  const [errorMessage, setErrorMessage] = useState(null)\n  const [username, setUsername] = useState('')\n  const [password, setPassword] = useState('')\n  const [user, setUser] = useState(null)\n\n  const handleLogin = async (event) => {\n    event.preventDefault()\n\n    try {\n      const userToSet = await login({\n        username,\n        password\n      })\n\n      window.localStorage.setItem(\n        'loggedNoteAppUser', JSON.stringify(userToSet)\n      )\n\n      setToken(userToSet.token)\n\n      setUser(userToSet)\n      setUsername('')\n      setPassword('')\n\n      history.push('/notes')\n    } catch (e) {\n      console.log(e.name)\n      console.log(e.message)\n      setErrorMessage('Wrong credentials')\n      setTimeout(() => {\n        setErrorMessage(null)\n      }, 5000)\n    }\n  }\n\n  if (errorMessage) {\n    return <p>{errorMessage}</p>\n  }\n\n  if (user) {\n    return <p>User is logged</p>\n  }\n\n  return (\n    <LoginForm\n      username={username}\n      password={password}\n      handleLogin={handleLogin}\n      handleUsernameChange={({ target }) => setUsername(target.value)}\n      handlePasswordChange={({ target }) => setPassword(target.value)}\n    />\n  )\n}\n","import React from 'react'\n\nconst Notification = ({ message }) => {\n  if (message === null) {\n    return null\n  }\n\n  return (\n    <div className='error'>\n      {message}\n    </div>\n  )\n}\n\nexport default Notification\n","import React from 'react'\nimport { Link } from 'react-router-dom'\n\nconst Note = ({ note, toggleImportance }) => {\n  const label = note.important\n    ? 'make not important'\n    : 'make important'\n\n  return (\n    <li className='note'>\n      <Link to={`/notes/${note.id}`}>{note.content}</Link>\n      <button onClick={toggleImportance}>{label}</button>\n    </li>\n  )\n}\n\nexport default Note\n","import React, { useRef, useState } from 'react'\nimport Toggable from './Toggable'\n\nexport default function NoteForm ({ addNote, handleLogout }) {\n  const [newNote, setNewNote] = useState('')\n  const toggableRef = useRef()\n\n  const handleChange = (event) => {\n    setNewNote(event.target.value)\n  }\n\n  const handleSubmit = (event) => {\n    event.preventDefault()\n\n    const noteObject = {\n      content: newNote,\n      important: false\n    }\n\n    addNote(noteObject)\n    setNewNote('')\n    toggableRef.current.toggleVisibility()\n  }\n\n  return (\n    <Toggable buttonLabel='New Note' ref={toggableRef}>\n      <h3>Create a new note</h3>\n      <form onSubmit={handleSubmit}>\n        <input\n          type='text'\n          placeholder='Write your note content'\n          onChange={handleChange}\n          value={newNote}\n        />\n        <button type='submit'>\n          Save\n        </button>\n      </form>\n      <button onClick={handleLogout}>\n        Logout\n      </button>\n    </Toggable>\n  )\n}\n","import { useEffect, useState } from 'react'\nimport { getAll, create, update } from '../services/notes'\n\nexport default function useNotes () {\n  const [notes, setNotes] = useState([])\n\n  useEffect(() => {\n    getAll()\n      .then(initialNotes => {\n        setNotes(initialNotes)\n      })\n  }, [])\n\n  const addNote = (noteObject) => {\n    create(noteObject)\n      .then(returnedNote => setNotes(prev => [...prev, returnedNote]))\n      .catch((e) => {\n        console.error(e)\n      })\n  }\n\n  const toggleImportanceOf = id => {\n    const note = notes.find(n => n.id === id)\n    const changedNote = { ...note, important: !note.important }\n\n    return update(id, changedNote)\n      .then(returnedNote => {\n        setNotes(notes.map(note => note.id !== id ? note : returnedNote))\n      })\n  }\n\n  return {\n    addNote,\n    toggleImportanceOf,\n    notes\n  }\n}\n","import { useEffect, useState } from 'react'\nimport { setToken } from '../services/notes'\nimport { login } from '../services/login'\n\nexport const useUser = () => {\n  const [user, setUser] = useState(null)\n\n  useEffect(() => {\n    const loggedUserJSON = window.localStorage.getItem('loggedNoteAppUser')\n    if (loggedUserJSON) {\n      const user = JSON.parse(loggedUserJSON)\n      setUser(user)\n      setToken(user.token)\n    }\n  }, [])\n\n  const userLogout = () => {\n    setUser(null)\n    setToken(user.token)\n    window.localStorage.removeItem('loggedNoteAppUser')\n  }\n\n  const userLogin = async ({ username, password }) => {\n    const userToSet = await login({\n      username,\n      password\n    })\n\n    window.localStorage.setItem(\n      'loggedNoteAppUser', JSON.stringify(userToSet)\n    )\n\n    setToken(userToSet.token)\n    setUser(userToSet)\n  }\n\n  return {\n    user,\n    userLogout,\n    userLogin\n  }\n}\n","import { useState } from 'react'\nimport Notification from './components/Notification'\nimport Note from './components/Note'\nimport LoginForm from './components/LoginForm'\nimport NoteForm from './components/NoteForm'\nimport useNotes from './hooks/useNotes'\nimport { useUser } from './hooks/useUser'\n\nfunction Notes () {\n  const { notes, addNote, toggleImportanceOf } = useNotes()\n  const { user, userLogin, userLogout } = useUser()\n\n  const [showAll, setShowAll] = useState(true)\n  const [errorMessage, setErrorMessage] = useState(null)\n  const [username, setUsername] = useState('')\n  const [password, setPassword] = useState('')\n\n  const toggleImportanceOfNote = id => {\n    toggleImportanceOf(id)\n      .catch(error => {\n        setErrorMessage('Note was already removed from server')\n        console.error(error)\n        setTimeout(() => {\n          setErrorMessage()\n        }, 5000)\n      })\n  }\n\n  const handleLogin = async (event) => {\n    event.preventDefault()\n    try {\n      userLogin({ username, password })\n\n      setUsername('')\n      setPassword('')\n    } catch (e) {\n      console.log(e.name)\n      console.log(e.message)\n      setErrorMessage('Wrong credentials')\n      setTimeout(() => {\n        setErrorMessage(null)\n      }, 5000)\n    }\n  }\n\n  const notesToShow = showAll\n    ? notes\n    : notes.filter(note => note.important)\n\n  return (\n    <div>\n      <h1>Notes</h1>\n      <Notification message={errorMessage} />\n      {\n        user\n          ? <NoteForm\n              addNote={addNote}\n              handleLogout={userLogout}\n            />\n          : <LoginForm\n              username={username}\n              password={password}\n              handleLogin={handleLogin}\n              handleUsernameChange={({ target }) => setUsername(target.value)}\n              handlePasswordChange={({ target }) => setPassword(target.value)}\n            />\n      }\n\n      <div>\n        <button onClick={() => setShowAll(!showAll)}>\n          show {showAll ? 'important' : 'all'}\n        </button>\n      </div>\n      <ul>\n        {notesToShow.map((note, i) =>\n          <Note\n            key={i}\n            note={note}\n            toggleImportance={() => toggleImportanceOfNote(note.id)}\n          />\n        )}\n      </ul>\n    </div>\n  )\n}\n\nexport default Notes\n","import { Link, BrowserRouter, Route, Switch, Redirect } from 'react-router-dom'\nimport { NoteDetail } from './components/NoteDetail'\nimport Login from './Login'\nimport Notes from './Notes'\nimport { useUser } from './hooks/useUser'\nimport useNotes from './hooks/useNotes'\n\nconst Home = () => <h1>Home Page</h1>\n\nconst Users = () => <h1>Users</h1>\n\nconst inlineStyles = {\n  padding: 5\n}\n\nconst App = () => {\n  const { user } = useUser()\n  const { notes } = useNotes()\n\n  return (\n    <BrowserRouter>\n      <header>\n        <Link to='/' style={inlineStyles}>\n          Home\n        </Link>\n        <Link to='/notes' style={inlineStyles}>\n          Notes\n        </Link>\n        <Link to='/users' style={inlineStyles}>\n          Users\n        </Link>\n        {\n          user\n            ? <em>Logged as {user.name}</em>\n            : <Link to='/login' style={inlineStyles}>Login</Link>\n        }\n\n      </header>\n\n      <Switch>\n        <Route path='/notes/:id'>\n          <NoteDetail notes={notes} />\n        </Route>\n\n        <Route path='/users'>\n          <Users />\n        </Route>\n\n        <Route path='/notes'>\n          <Notes />\n        </Route>\n\n        <Route\n          path='/login' render={() => {\n            return user ? <Redirect to='/' /> : <Login />\n          }}\n        />\n\n        <Route path='/'>\n          <Home />\n        </Route>\n      </Switch>\n    </BrowserRouter>\n  )\n}\n\nexport default App\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport App from './App'\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root')\n)\n"],"sourceRoot":""}